setwd("C:/SCM/MANA/Infy-NIA")
pwd
setwd("C:/SCM/MANA/Infy-NIA")
X = read.csv(file='ship_Data.csv')
X$SHIPMENT_AMOUNT = as.numeric(X$SHIPMENT_AMOUNT)
X$BOOKED_DATE =  as.POSIXct(X$BOOKED_DATE, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$ROUTE_DERIVED =  as.POSIXct(X$ROUTE_DERIVED, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$MFG_DATE = as.POSIXct(X$MFG_DATE, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$CM_SSD = as.POSIXct(X$CM_SSD, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$PACKOUT_DATE  = as.POSIXct(X$PACKOUT_DATE, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$DELIVERY_CREATED  = as.POSIXct(X$DELIVERY_CREATED, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$PICK_RELEASED  = as.POSIXct(X$PICK_RELEASED, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$EXPECTED_SLC_SD  = as.POSIXct(X$EXPECTED_SLC_SD, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$ACTUAL_SLC_SD  = as.POSIXct(X$ACTUAL_SLC_SD, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X$EXPECTED_DELIVERY_DATE=as.POSIXct(X$EXPECTED_DELIVERY_DATE,format="%m-%d-%Y %H:%M:%S",tz='EST')
X$DELIVERED_DATE  = as.POSIXct(X$DELIVERED_DATE, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X_all=X
names(X)
summary(X)
summary(X$ORDER_TYPE)
summary(X$ORDER_TYPE)
summary(X$SHIP_TO)
summary(X$SHIPPING_METHOD_CODE)
summary(X$OPT_IN_OUT)
summary(X$OTM_IB_SHIPPING_ROUTE_CODE)
summary(X$PICK_RELEASED)
summary(X$EXPECTED_SLC_SD)
summary(X$ACTUAL_SLC_SD)
reqd_list = c('ORDER_TYPE','SHIP_TO','SHIPPING_METHOD_CODE','OPT_IN_OUT',
'OTM_IB_SHIPPING_ROUTE_CODE','PICK_RELEASED', 'EXPECTED_SLC_SD', 'ACTUAL_SLC_SD')
X_sub = X[ , which(names(X) %in% reqd_list)]
head(X_sub)
summary(X_sub)
X_sub
X = read.csv(file='ship_Data.csv')
View(X)
X$ACTUAL_SLC_SD  = as.POSIXct(X$ACTUAL_SLC_SD, format = "%m-%d-%Y %H:%M:%S",tz='EST')
X = read.csv(file='ship_Data.csv')
X$ACTUAL_SLC_SD  = as.POSIXct(X$ACTUAL_SLC_SD, format = "%m/%d/%Y %H:%M:%S")
X$BOOKED_DATE =  as.POSIXct(X$BOOKED_DATE, format = "%m/%d/%Y %H:%M:%S")
X$ROUTE_DERIVED =  as.POSIXct(X$ROUTE_DERIVED, format = "%m/%d/%Y %H:%M:%S")
X$MFG_DATE = as.POSIXct(X$MFG_DATE, format = "%m/%d/%Y %H:%M:%S")
X$CM_SSD  = as.POSIXct(X$CM_SSD, format = "%m/%d/%Y %H:%M:%S")
X$PACKOUT_DATE  = as.POSIXct(X$PACKOUT_DATE, format = "%m/%d/%Y %H:%M:%S")
X$DELIVERY_CREATED  = as.POSIXct(X$DELIVERY_CREATED, format = "%m/%d/%Y %H:%M:%S")
X$PICK_RELEASED  = as.POSIXct(X$PICK_RELEASED, format = "%m/%d/%Y %H:%M:%S")
X$EXPECTED_SLC_SD  = as.POSIXct(X$EXPECTED_SLC_SD, format = "%m/%d/%Y %H:%M:%S")
X$ACTUAL_SLC_SD  = as.POSIXct(X$ACTUAL_SLC_SD, format = "%m/%d/%Y %H:%M:%S")
X$EXPECTED_DELIVERY_DATE  = as.POSIXct(X$EXPECTED_DELIVERY_DATE, format = "%m/%d/%Y %H:%M:%S")
X$DELIVERED_DATE  = as.POSIXct(X$DELIVERED_DATE, format = "%m/%d/%Y %H:%M:%S")
X_all=X
names(X)
summary(X)
reqd_list = c('ORDER_TYPE','SHIP_TO','SHIPPING_METHOD_CODE','OPT_IN_OUT',
'OTM_IB_SHIPPING_ROUTE_CODE','PICK_RELEASED', 'EXPECTED_SLC_SD', 'ACTUAL_SLC_SD')
X_sub = X[ , which(names(X) %in% reqd_list)]
View(X_sub)
head(X_sub)
X_sub
X_sub = X_sub[-1,]
idxna = which(is.na(X_sub$ACTUAL_SLC_SD)!=0)
X_sub = X_sub[-idxna,]
X_sub = X_sub[order(X_sub[,6]),]
tail(X_sub)
summary(X_sub$ORDER_TYPE)
valid_ot = c('Standard Infosys - AUS', 'Standard Infosys - CAN',  'Standard Infosys - CN', 'Standard Infosys - IN',
'Standard Infosys - ITL', 'Standard Infosys - JPN', 'Standard Infosys - NL',
'Standard Infosys - PY', 'Standard Infosys - RUS',  'Standard Infosys - UKH',
'Standard Infosys - US')
X_sub = X_sub[X_sub$ORDER_TYPE %in% valid_ot,]
summary(X_sub$SHIPPING_METHOD_CODE)
X_sub = X_sub[!(as.numeric(X_sub$SHIPPING_METHOD_CODE) %in% which(table(X_sub$SHIPPING_METHOD_CODE)<5)),]
summary(X_sub$SHIPPING_METHOD_CODE)
summary(X_sub$SHIP_TO)
X_sub = X_sub[!(as.numeric(X_sub$SHIP_TO) %in% which(table(X_sub$SHIP_TO)<=5)),]
summary(X_sub$SHIP_TO)
X_sub$EXP_PICKTOSLC= as.numeric(X_sub$EXPECTED_SLC_SD - X_sub$PICK_RELEASED)
X_sub$ACT_PICKTOSLC= as.numeric(X_sub$ACTUAL_SLC_SD - X_sub$PICK_RELEASED)
summary(X_sub)
reqd_list2 = c('ORDER_TYPE','SHIP_TO','SHIPPING_METHOD_CODE','OPT_IN_OUT',
'OTM_IB_SHIPPING_ROUTE_CODE','ACT_PICKTOSLC')
X= X_sub[ , which(names(X_sub) %in% reqd_list2)]
Y= X$ACT_PICKTOSLC
Y_EXP=X_sub$EXP_PICKTOSLC
test.X=X[-train,]
test.Y=Y[-train]
test.Yexp = Y_EXP[-train]
test.X=X[-train,]
train=1:41000 # approx 80% of data
test.X=X[-train,]
test.Y=Y[-train]
test.Yexp = Y_EXP[-train]
lm.fit=lm(ACT_PICKTOSLC~. , data=X, subset = train)
lm.fit
summary(lm.fit)
output.lm=predict( lm.fit, test.X )
output.lm=predict( lm.fit, test.X )
cat( " MSE - Regression prediction vs actuals " ,mean((test.X$ACT_PICKTOSLC - output.lm)^2))
output.lm=predict( lm.fit, test.X )
e1 = (test.X$ACT_PICKTOSLC - test.Yexp)/test.X$ACT_PICKTOSLC
e2=sum(e1^2)/length(test.X$ACT_PICKTOSLC)
rmspe_exp=sqrt(e2)*100
r1 = (test.X$ACT_PICKTOSLC - output.lm)/test.X$ACT_PICKTOSLC
r2=sum(r1^2)/length(test.X$ACT_PICKTOSLC)
rmspe_reg=sqrt(r2)*100
r1 = (test.X$ACT_PICKTOSLC - output.lm)/test.X$ACT_PICKTOSLC
library(earth)
install.packages("earth")
library(earth)
library(earth)
install.packages("earth")
library(earth)
install.packages("plotmo")
library(earth)
source('C:/SCM/MANA/Infy-NIA/OTSOTD/Ship.R')
source('C:/SCM/MANA/Infy-NIA/OTSOTD/Ship.R')
save.image("C:/SCM/MANA/Infy-NIA/OTSOTD/data.RData")
